
func drag_event(event) -> void:
  if event is InputEventMouseMotion:
    if(!_is_moviable_area()):
      dragging = false
  if(_is_moviable_area() && event is InputEventMouseButton):
    if not dragging and event.pressed:
      dragging = true
    if dragging and not event.pressed:
      dragging = false
  if event is InputEventMouseMotion and dragging:
    rect_global_position = event.position - rect_origin_vector2;

func update_hover_item_pos():
  if(!hover_item.node):return;
  var _item = hover_item.node.get_child(0);
  _item.rect_position = mouse_pos;
  

func _input(event):
  if(event is 3:03 PM 5/25/2021
    if(event.button_index == BUTTON_LEFT):
      on_slot_click(event);
      on_slot_dblclick(event)


func on_slot_click(event):
  if(event.pressed):
    var _slot_index = _get_slot_index();
    if(_is_inside(_slot_index)):
      _slot_click(_slot_index)

func on_slot_dblclick(event):
  if(event.doubleclick):
    var _slot_index = _get_slot_index();
    emit_signal("slot_dbclick", _slot_index);

func _slot_click(slot_index:Vector2):
  var _slot_item = get_slot_item(slot_index);
  if(_slot_has_item(slot_index)):
    if(hover_item.node):
      var temp_item = _slot_item;
      set_slot_item(slot_index, hover_item.obj)
      remove_hover_item(hover_item.node);
      hover_item.node = create_hover_item(temp_item)
      hover_item.obj = temp_item;
    else:
      hover_item.node = create_hover_item(_slot_item)
      hover_item.obj = _slot_item;
      set_slot_item(slot_index, EMPTY_SLOT)
  else:
    if(hover_item.node):
      set_slot_item(slot_index, hover_item.obj)
      remove_hover_item(hover_item.node);

func create_hover_item(item) -> Node:
  if(!item):
    print_debug("item Object is null");
    return null
  if(!item.icon):
    print_debug("item icon is null");
    return null

  var _parent_node := get_parent();
  var _item := Node.new();
  _item.name = item.name
    
  var _item_icon = TextureRect.new();
  _item_icon.texture = item.icon
    
  _item.add_child(_item_icon)
  _parent_node.add_child(_item)
    
  return _item
    
func remove_hover_item(item_obj):
  if(!item_obj):
    return;
  var _parent_node := get_parent();
  _parent_node.remove_child(item_obj)
  reset_hover_item();

func reset_hover_item():
  hover_item = {
    "node":null,
    "obj":null
  }
